#!/usr/bin/env python

import argparse
import sys

from colsplit import main


def parse_bool(bool_str):
    b00l = True
    if bool_str.isnumeric():
        b00l = bool(int(bool_str))
    elif bool_str.isalpha():
        try:
            b00l = eval(bool_str)
        except NameError:
            pass

    return b00l

if __name__ == '__main__':

    parser = argparse.ArgumentParser(
        description='split a CSV file in more fine grained sub-columns')
    parser.add_argument('infile', metavar='input file', nargs=1,
                        help='the input CSV file')
    parser.add_argument('outfile', metavar='output file', nargs='?',
                        default=None, help='the output CSV file (default: ' +
                        'stdout)')
    parser.add_argument('--delimiter', dest='delimiter', default=',',
                        help='the CSV delimiter used in the input file ' +
                        '(default: ,)')
    parser.add_argument('--encoding', dest='encoding', default='utf8',
                        help='the input file encoding (default: utf-8)')
    parser.add_argument('--header', dest='header_line', default='True',
                        help='whether the CSV file starts with a header ' +
                        'line (default: True')
    parser.add_argument('--fixedlengths', dest='str_lengths', type=int,
                        nargs='*', default=[2, 3], help='string lengths of ' +
                        'candidates for own columns (providing just the ' +
                        'option without arguments means that no fixed ' +
                        'lengths should be considered)')
    args = parser.parse_args()
    header_line = parse_bool(args.header_line)
    str_lengths = args.str_lengths if args.str_lengths is not None else []

    main.run(args.infile[0], args.outfile, header_line, args.delimiter,
             args.encoding, considered_fixed_lengths=str_lengths)
